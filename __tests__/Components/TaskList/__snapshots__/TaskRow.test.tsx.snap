// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TaskRow renders correctly 1`] = `
<View
  collapsable={false}
  handlerTag={4}
  handlerType="PanGestureHandler"
  onGestureHandlerEvent={[Function]}
  onGestureHandlerStateChange={[Function]}
  onLayout={[Function]}
  style={
    {
      "marginBottom": 10,
      "overflow": "hidden",
    }
  }
>
  <View
    collapsable={false}
    style={
      {
        "bottom": 0,
        "flexDirection": "row",
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "transform": [
          {
            "translateX": -10000,
          },
        ],
      }
    }
  >
    <RNGestureHandlerButton
      activeOpacity={0.105}
      collapsable={false}
      delayLongPress={600}
      handlerTag={5}
      handlerType="NativeViewGestureHandler"
      onActiveStateChange={[Function]}
      onGestureEvent={[Function]}
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
      onHandlerStateChange={[Function]}
      onPress={[Function]}
      style={
        {
          "alignItems": "center",
          "backgroundColor": "#5c5de5",
          "flex": 1,
          "flexDirection": "row",
          "justifyContent": "center",
          "maxWidth": 80,
          "width": "100%",
        }
      }
      underlayColor="black"
    >
      <View
        collapsable={false}
        style={
          {
            "backgroundColor": "black",
            "borderBottomLeftRadius": undefined,
            "borderBottomRightRadius": undefined,
            "borderRadius": undefined,
            "borderTopLeftRadius": undefined,
            "borderTopRightRadius": undefined,
            "bottom": 0,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
      <View
        collapsable={false}
        style={
          [
            {
              "transform": [
                {
                  "scale": 0,
                },
              ],
            },
          ]
        }
      >
        <Text
          allowFontScaling={false}
          selectable={false}
          style={
            [
              {
                "color": "white",
                "fontSize": 32,
              },
              undefined,
              {
                "fontFamily": "ionicons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              {},
            ]
          }
        >
          î¬¢
        </Text>
      </View>
    </RNGestureHandlerButton>
    <View
      onLayout={[Function]}
    />
  </View>
  <View
    collapsable={false}
    handlerTag={6}
    handlerType="TapGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    pointerEvents="auto"
    style={
      {
        "transform": [
          {
            "translateX": -0,
          },
        ],
      }
    }
  >
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        [
          {
            "elevation": 1,
            "padding": 0,
            "paddingLeft": 0,
          },
        ]
      }
    >
      <View>
        <View>
          <View>
            <Text>
              Despecto utpote bardus amo corrupti vis quisquam .
            </Text>
            <Text>
              Tutis temperantia ver territo assentator admirati.
            </Text>
          </View>
          <View />
        </View>
      </View>
      <View>
        <View
          style={
            [
              {
                "borderBottomColor": "#AAA",
                "borderBottomWidth": 0.5,
              },
            ]
          }
        />
        <View>
          <Text>
            <Text>
              -92 days ago
            </Text>
            <Text>
               18:37
            </Text>
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;
